// ------------------------------------------------------------
// Phantom Programming Language
// GitHub repo: https://github.com/notcl4y14/phantom-lang
// ------------------------------------------------------------

// ------------------------------------------------------------
// UNDER DEVELOPMENT VERSIONS
// ------------------------------------------------------------

// 4/2/2024
- Fixed shorthand assignment expressions and runtime value type error

// 3/2/2024 - 4/2/2024
- Added while statement
- Added shorthand assignment expressions
	+ Broken, need to be fixed
- The variables now can output errors if they have a type

// 2/2/2024
- Added a local scope to the block statement
- Added array literal

// 1/2/2024
- Added If and Block statements
- Removed Result.js
- Turned all the errors into `throw`-s

// 31/1/2024
- Added comparisonal expressions

// 30/1/2024
- Changed and overcommented the code
- Created RuntimeValue.js
- Added auto-casting for binary expressions
- Added delete keyword
	+ Deletes a variable
------------
- The language now reads the files
- Created "tests" folder
	+ test.pha
- Created VarDeclaration
- Created Environment.js
- Created AssignmentExpr
- Added "--env" argument
	+ Shows the environment result
- Added Identifier to interpreter

// 28/1/2024
- Renamed the "literal" node type to "Literal"
- Added unary expression runtime value

// 28/1/2024
- Created Interpreter.js
- Added runtime values
	+ number
	+ string
	+ boolean
	+ null
	+ program
	+ binary expression
- Added parameter
	+ --last-eval: Shows the last evaluated value
------------
- Created Result.js
- Created Error.js
- Added error system
- Added parameters
	+ --lexer: Shows the lexer's output
	+ --parser: Shows the parser's output

// 27/1/2024 - 28/1/2024
- Created Parser.js
- Added expressions
	+ Program
	+ Additive expression
	+ Multiplicative expression
	+ Power expression
	+ Numeric Literal
	+ String Literal
	+ Literal
	+ Parenthesised expression
	+ Non-working repeatable binary expression
	+ Unary expression

// 27/1/2024
- Added positions to tokens
- Added symbol, number, string, identifier, literal, keyword and closure tokens
- Changed the lexerizeToken(), hope it looks cleaner

// 21/1/2024 - 22/1/2024
- Created Lexer.js
- Created Position.js

// 21/1/2024
- Initial release
- Created main.js
- Created Token.js